<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.yseasony.acg.dao.UserDao">

	<resultMap id="userMap" type="user">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="login_name" property="loginName" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="enabled" property="enabled" jdbcType="BOOLEAN" />
		<result column="sex" property="sex" jdbcType="BOOLEAN" />
		<association property="roleList" column="id" javaType="role"
			select="getRoleList" />
	</resultMap>

	<resultMap id="roleMap" type="role">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="name" property="name" jdbcType="VARCHAR" />
	</resultMap>

	<select id="findUserByLoginName" resultMap="userMap"
		parameterType="java.lang.String">
		select
		id, email, login_name as loginName , name,
		password,enabled,sex
		from acg_user
		where login_name =
		#{loginName,jdbcType=VARCHAR}
	</select>

	<select id="get" resultMap="userMap" parameterType="java.lang.Long">
		select
		id,
		email, login_name as loginName, name, password,enabled,sex
		from
		acg_user
		where id =
		#{id,jdbcType=BIGINT}
	</select>

	<select id="getRoleList" resultMap="roleMap" parameterType="java.lang.Long">
		SELECT
		acg_role.id,
		acg_role.`name`
		FROM
		acg_user
		INNER JOIN
		acg_user_role
		ON id = acg_user_role.user_id
		INNER JOIN
		acg_role ON
		acg_user_role.role_id = acg_role.id
		WHERE
		acg_user.id =
		#{id,jdbcType=BIGINT}
	</select>

	<delete id="delete" parameterType="java.lang.Long">
		delete from acg_user where id
		= #{id,jdbcType=BIGINT}
	</delete>

	<insert id="insert" parameterType="org.yseasony.acg.entity.User">
		insert into acg_user (id,
		email, login_name, name, password,enabled,sex)
		values
		(#{id,jdbcType=BIGINT},
		#{email,jdbcType=VARCHAR},
		#{loginName,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},#{enabled},#{sex})
  </insert>

	<select id="count" resultType="java.lang.Integer">
		select count(id) from acg_user
		<if test="filters != null">
			where
			<if test="filters.loginName != null">
				login_name = #{filters.loginName}
			</if>
		</if>
	</select>

	<select id="page" resultType="user" parameterType="page">
		SELECT
		id,
		email, login_name as loginName, name, password,enabled,sex
		FROM
		acg_user LIMIT #{pageStart},
		#{limit}
	</select>

	<update id="update" parameterType="user">
		update acg_user
		set email =
		#{email,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		password =
		#{password,jdbcType=VARCHAR},
		sex = #{sex},
		enabled = #{enabled}
		where id = #{id,jdbcType=BIGINT}
  </update>


</mapper>