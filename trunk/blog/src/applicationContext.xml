<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd"
	default-lazy-init="true">

	<context:annotation-config />

	<!-- 定义受环境影响易变的变量 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath*:/jdbc.properties
				</value>
			</list>
		</property>
	</bean>

	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="com.yy" />
	<context:component-scan base-package="com.yy.test" />

	<!-- 数据源配置,在测试环境使用单连接 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<!--  Connection Info 
		-->
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!--  Connection Pooling Info 
		-->
		<property name="initialSize" value="5" />
		<property name="maxActive" value="100" />
		<property name="maxIdle" value="30" />
		<property name="maxWait" value="1000" />
		<property name="poolPreparedStatements" value="false" />
		<property name="defaultAutoCommit" value="false" />
	</bean>

	<!-- Hibernate配置 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation">
			<value>classpath:hibernate.cfg.xml</value>
		</property>
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${hibernate.dialect}
				</prop>
				<prop key="hibernate.show_sql">
					${hibernate.show_sql}
				</prop>
				<prop key="hibernate.format_sql">
					${hibernate.format_sql}
				</prop>

				<prop key="hibernate.cache.use_second_level_cache">
					${hibernate.cache.use_second_level_cache} </prop>
				<prop key="hibernate.cache.provider_class">
					org.hibernate.cache.EhCacheProvider </prop>
				<prop key="hibernate.cache.use_query_cache">
					${hibernate.cache.use_query_cache} </prop>
				<prop key="hibernate.cache.provider_configuration_file_resource_path">
					${hibernate.ehcache_config_file} </prop>
				<prop key="hibernate.hbm2ddl.auto"> ${hibernate.hbm2ddl.auto} </prop>

				<!--
					<prop key="hibernate.cache.use_second_level_cache">
					${hibernate.cache.use_second_level_cache} </prop> <prop
					key="hibernate.cache.provider_class">
					com.googlecode.hibernate.memcached.MemcachedCacheProvider </prop>
					<prop key="hibernate.cache.use_query_cache"> true </prop> <prop
					key="hibernate.memcached.servers"> 192.168.1.164:11211 </prop>
					<prop key="hibernate.memcached.cacheTimeSeconds"> 300 </prop> <prop
					key="hibernate.memcached.operationTimeout"> 3000 </prop> <prop
					key="hibernate.memcached.commandFactory"> BinaryCommandFactory
					</prop> <prop key="hibernate.memcached.clearSupported"> false
					</prop>
				-->
			</props>
		</property>
		<property name="eventListeners">
			<map>
				<entry key="save-update">
					<list>
						<bean class="com.yy.dao.impl.AuditListener" />
						<bean class="org.hibernate.event.def.DefaultSaveOrUpdateEventListener" />
					</list>
				</entry>
			</map>
		</property>
	</bean>

	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- SpringContextUtils定义 -->
	<bean id="springContextUtils" class="com.yy.utils.SpringContextUtils"
		lazy-init="false" />
		
	<aop:aspectj-autoproxy />

</beans>