<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.yseasony.exam.dao.QuestionBankDao">
	<resultMap id="BaseResultMap" type="org.yseasony.exam.entity.QuestionBank">
		<id column="qb_id" property="qbId" jdbcType="INTEGER" />
		<result column="ex_id" property="exId" jdbcType="INTEGER" />
		<result column="qt_id" property="qtId" jdbcType="INTEGER" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="question" property="question" jdbcType="VARCHAR" />
		<result column="answer" property="answer" jdbcType="VARCHAR" />
		<result column="score" property="score" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		qb_id, ex_id, qt_id, title, question, answer, score
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="questionBank">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from exam_question_bank
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from exam_question_bank
		where qb_id = #{qbId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from exam_question_bank
		where qb_id = #{qbId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="questionBank">
		delete from exam_question_bank
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="questionBank">
		insert into exam_question_bank (qb_id, ex_id, qt_id,
		title, question, answer,
		score)
		values (#{qbId,jdbcType=INTEGER}, #{exId,jdbcType=INTEGER},
		#{qtId,jdbcType=INTEGER},
		#{title,jdbcType=VARCHAR}, #{question,jdbcType=VARCHAR}, #{answer,jdbcType=VARCHAR},
		#{score,jdbcType=INTEGER})
	</insert>
	<select id="countByExample" parameterType="questionBank"
		resultType="java.lang.Integer">
		select count(*) from exam_question_bank
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update exam_question_bank
		<set>
			<if test="record.qbId != null">
				qb_id = #{record.qbId,jdbcType=INTEGER},
			</if>
			<if test="record.exId != null">
				ex_id = #{record.exId,jdbcType=INTEGER},
			</if>
			<if test="record.qtId != null">
				qt_id = #{record.qtId,jdbcType=INTEGER},
			</if>
			<if test="record.title != null">
				title = #{record.title,jdbcType=VARCHAR},
			</if>
			<if test="record.question != null">
				question = #{record.question,jdbcType=VARCHAR},
			</if>
			<if test="record.answer != null">
				answer = #{record.answer,jdbcType=VARCHAR},
			</if>
			<if test="record.score != null">
				score = #{record.score,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update exam_question_bank
		set qb_id = #{record.qbId,jdbcType=INTEGER},
		ex_id = #{record.exId,jdbcType=INTEGER},
		qt_id = #{record.qtId,jdbcType=INTEGER},
		title = #{record.title,jdbcType=VARCHAR},
		question = #{record.question,jdbcType=VARCHAR},
		answer = #{record.answer,jdbcType=VARCHAR},
		score = #{record.score,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="questionBank">
		update exam_question_bank
		<set>
			<if test="exId != null">
				ex_id = #{exId,jdbcType=INTEGER},
			</if>
			<if test="qtId != null">
				qt_id = #{qtId,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="question != null">
				question = #{question,jdbcType=VARCHAR},
			</if>
			<if test="answer != null">
				answer = #{answer,jdbcType=VARCHAR},
			</if>
			<if test="score != null">
				score = #{score,jdbcType=INTEGER},
			</if>
		</set>
		where qb_id = #{qbId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="questionBank">
		update exam_question_bank
		set ex_id = #{exId,jdbcType=INTEGER},
		qt_id = #{qtId,jdbcType=INTEGER},
		title = #{title,jdbcType=VARCHAR},
		question = #{question,jdbcType=VARCHAR},
		answer = #{answer,jdbcType=VARCHAR},
		score = #{score,jdbcType=INTEGER}
		where qb_id = #{qbId,jdbcType=INTEGER}
	</update>

	<select id="pageCount" resultType="long">
		select count(*) FROM exam_question_bank
	</select>
	
	<select id="page" resultType="questionBank">
		SELECT qt_id, title, question, answer, score, ex_id, qb_id
		FROM exam_question_bank
	</select>
</mapper>